{"version":3,"sources":["Components/Button/Button.js","App.js","index.js"],"names":["Button","onGood","onNeutral","onBad","type","name","onClick","App","state","good","neutral","bad","handleGood","setState","prevState","handleNeutral","handleBad","countTotalFeedback","Object","keys","reduce","acc","value","countPositiveFeedbackPercentage","result","percentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAeeA,EAbA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAtB,OACb,gCACE,wBAAQC,KAAK,SAASC,KAAK,OAAOC,QAASL,EAA3C,kBAGA,wBAAQG,KAAK,SAASC,KAAK,UAAUC,QAASJ,EAA9C,qBAGA,wBAAQE,KAAK,SAASC,KAAK,MAAMC,QAASH,EAA1C,qBCNEI,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,WAAa,WACX,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,KAAMK,EAAUL,KAAO,O,EAI3BM,cAAgB,WACd,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,QAASI,EAAUJ,QAAU,O,EAIjCM,UAAY,WACV,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BH,IAAKG,EAAUH,IAAM,O,EAIzBM,mBAAqB,WACnB,OAAOC,OAAOC,KAAK,EAAKX,OAAOY,QAC7B,SAACC,EAAKC,GAAN,OAAgBD,EAAM,EAAKb,MAAMc,KACjC,I,EAIJC,gCAAkC,WAChC,IAAMC,EAAS,EAAKP,qBAEdQ,EAAqB,IADV,EAAKjB,MAAdC,KAC0Be,EAClC,OAAkB,IAAXA,EAAe,EAAIE,KAAKC,MAAMF,I,4CAGvC,WACE,OACE,qCACE,uDACA,cAAC,EAAD,CACExB,OAAQ2B,KAAKhB,WACbV,UAAW0B,KAAKb,cAChBZ,MAAOyB,KAAKZ,YAEd,4CACA,gCACE,6CAAcY,KAAKpB,MAAMC,QACzB,gDAAiBmB,KAAKpB,MAAME,WAC5B,4CAAakB,KAAKpB,MAAMG,OACxB,8CAAeiB,KAAKX,wBACpB,wDAAyBW,KAAKL,+C,GAtDtBM,aA6DHtB,IC5DfuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3a31de89.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ onGood, onNeutral, onBad }) => (\n  <div>\n    <button type=\"button\" name=\"good\" onClick={onGood}>\n      Good\n    </button>\n    <button type=\"button\" name=\"neutral\" onClick={onNeutral}>\n      Neutral\n    </button>\n    <button type=\"button\" name=\"bad\" onClick={onBad}>\n      Bad\n    </button>\n  </div>\n);\nexport default Button;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Button from './Components/Button';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleGood = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n  };\n\n  handleNeutral = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n\n  handleBad = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.keys(this.state).reduce(\n      (acc, value) => acc + this.state[value],\n      0\n    );\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return result === 0 ? 0 : Math.round(percentage);\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Please leave feedback</h2>\n        <Button\n          onGood={this.handleGood}\n          onNeutral={this.handleNeutral}\n          onBad={this.handleBad}\n        />\n        <h2>Statistics</h2>\n        <div>\n          <li>{`Good: ${this.state.good}`}</li>\n          <li>{`Neutral: ${this.state.neutral}`}</li>\n          <li>{`Bad: ${this.state.bad}`}</li>\n          <li>{`Total: ${this.countTotalFeedback()}`}</li>\n          <li>{`Good percentage: ${this.countPositiveFeedbackPercentage()}`}</li>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}