{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","feedback","type","onClick","Statistics","this","props","good","neutral","bad","total","positivePercentage","Component","Section","title","children","section","Notification","message","App","state","leaveFeedback","setState","prevState","countTotalFeedback","Object","keys","reduce","acc","value","countPositiveFeedbackPercentage","result","percentage","Math","round","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,SAAW,oC,gBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,6MCsBbC,EApBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAAQC,UAAWC,IAAEC,SACnBC,KAAK,SAELC,QAAS,kBAAMP,EAAgBE,IAHjC,SAIGA,GAFIA,SCLTM,G,kKACF,WACI,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACI,+BACI,6CAAcJ,KACd,gDAAiBC,KACjB,4CAAaC,KACb,8CAAeC,KACf,sDAAuBC,Y,GATdC,cAuBVR,I,iBCTAS,EAfC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OACI,0BAAShB,UAAWC,IAAEgB,QAAtB,UACI,6BAAKF,IACJC,MCGEE,EARM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAO,4BAAIA,KCITC,E,4MACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,cAAgB,SAAAvB,GAAM,OACpB,EAAKwB,UAAS,SAAAC,GAAS,sBAAQzB,EAASyB,EAAUzB,GAAS,O,EAE7D0B,mBAAqB,WACnB,OAAOC,OAAOC,KAAK,EAAKN,OAAOO,QAC7B,SAACC,EAAKC,GAAN,OAAgBD,EAAM,EAAKR,MAAMS,KACjC,I,EAIJC,gCAAkC,WAChC,IAAMC,EAAS,EAAKP,qBAEdQ,EAAqB,IADV,EAAKZ,MAAdb,KAC0BwB,EAClC,OAAkB,IAAXA,EAAe,EAAIE,KAAKC,MAAMF,I,4CAGvC,WACE,OACE,sBAAKG,MAAM,WAAX,UACE,cAAC,EAAD,CAASrB,MAAM,wBAAf,SACA,cAAC,EAAD,CACEnB,QAAS8B,OAAOC,KAAKrB,KAAKe,OAC1BxB,gBAAiBS,KAAKgB,kBAExB,cAAC,EAAD,CAASP,MAAM,aAAf,SACGT,KAAKmB,qBACJ,cAAC,EAAD,CACEjB,KAAMF,KAAKe,MAAMb,KACjBC,QAASH,KAAKe,MAAMZ,QACpBC,IAAKJ,KAAKe,MAAMX,IAChBC,MAAOL,KAAKmB,qBACVb,mBAAoBN,KAAKyB,oCAE7B,cAAC,EAAD,CAAcZ,QAAQ,+B,GAzChBN,aAiDHO,ICnDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d93cc1c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__bMtQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2Ep7p\"};","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div >\n      {options.map(option => (\n        <button className={s.feedback}\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}>\n          {option}\n        </button>\n      ))}\n      </div>\n  )\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport'./Statistics.module.css';\r\n\r\nclass Statistics extends Component {\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n        return (\r\n            <ul>\r\n                <li>{`Good: ${good}`}</li>\r\n                <li>{`Neutral: ${neutral}`}</li>\r\n                <li>{`Bad: ${bad}`}</li>\r\n                <li>{`Total: ${total}`}</li>\r\n                <li>{`Good feedback: ${positivePercentage}`}</li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <section className={s.section}>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => {\r\n    return <p>{message}</p>\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import './App.css';\nimport React, { Component } from 'react';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = option =>\n    this.setState(prevState => ({ [option]: prevState[option] +1 }));\n  \n  countTotalFeedback = () => {\n    return Object.keys(this.state).reduce(\n      (acc, value) => acc + this.state[value],\n      0,\n    );\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return result === 0 ? 0 : Math.round(percentage);\n  };\n\n  render() {\n    return (\n      <div class='main-div'>\n        <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.leaveFeedback}/>\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()} />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}